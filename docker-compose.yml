version: '3.8'
services:
  api-db:
    container_name: goji-db
    env_file:
      - ./services/web/.env
    image: postgres:alpine
    environment:
      - POSTGRES_USER=local
      - POSTGRES_PASSWORD=local
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"
    volumes:
      - ./services/db:/app/db
    restart: always
  api-test-db:
    container_name: goji-test-db
    env_file:
      - ./services/web/.env
    image: postgres:alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test_db
    ports:
      - "5434:5432"
  api-pgadmin:
    container_name: goji-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=godzilliqa@godz.io
      - PGADMIN_DEFAULT_PASSWORD=godzilliqa
    ports:
      - "5050:80"
    depends_on:
      - api-db
  api-redis:
    container_name: goji-redis
    image: "redis:alpine"
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - ./services/redis:/var/lib/redis
    command: redis-server --requirepass Y3YjCB-YZJwi
    ports:
     - "6379:6379"
  api-web:
    container_name: goji-web
    environment: 
      - PORT=8080
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://local:local@api-db:5432/test_db
    build:
      context: './services/web/'
      dockerfile: Dockerfile
    volumes:
      - ./services/web:/app/web
    env_file:
      - ./services/web/.env
    ports:
      - "8080:8080"
      - "5679:5678"
    depends_on:
      - api-db
      - api-redis
